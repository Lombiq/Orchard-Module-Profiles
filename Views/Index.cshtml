@model OrchardHUN.ModuleProfiles.ViewModels.ProfileListViewModel
           
@{
    Style.Require("ModuleProfiles");
}

<script type="text/javascript">
    IncludeProfile = function(name) {
        if ($("#" + name + "_Included").is(':checked')) $("#" + name + "_Enabled").removeAttr("disabled");
        else $("#" + name + "_Enabled").attr("disabled", true);
    }

    $(document).ready(function () {
        $("#deleteSelectedProfile").click(function () {
            $.ajax({
                type: "DELETE",
                url: "@Url.Action("DeleteProfile")",
                data: { Name: $("#profileList option:selected").val(), _antiforgerytoken: $("#__RequestVerificationToken").val() },
                success: function() {
                    window.location.reload();
                }
            });           
        });

        $("#viewSelectedProfile").click(function() {
            window.location.href = "/Modules/ModuleProfiles/" + $("#profileList option:selected").val();
        });
    });
</script>

<h1>@Html.TitleForPage(T("Module Profiles").ToString())</h1>

@using (Html.BeginFormAntiForgeryPost())
{
    @Html.Label("model", T("Here is a list of the available module profiles:").ToString())
    @Html.DropDownListFor(model => model.ProfileNames.Values, new SelectList(Model.ProfileNames.Values), new { id = "profileList" })

    <input type="button" name="viewProfile" id="viewSelectedProfile" class="button" value="@T("View")" />
    <input type="button" class="button" value="@T("Activate")" />
    <input type="button" class="button" value="@T("Activate Inverse")" />
    <input type="button" name="deleteProfile" id="deleteSelectedProfile" class="button" value="@T("Delete")" />
}

<br />
<br />

@using (Html.BeginFormAntiForgeryPost(Url.Action("CreateProfile"), FormMethod.Post))
{
    @Html.TextBox("Name", "", new { id = "newModuleNameField" })
    <button type="submit" class="primaryAction">@T("Create New Profile")</button>
}

<br />
<br />

@if (Model.Current != null)
{    
    using (Html.BeginFormAntiForgeryPost(Url.Action("SaveProfile"), FormMethod.Post))
    {
    <h1>@T("Selected profile:\t")@Html.DisplayTextFor(m => Model.Current.Name)</h1>
    @Html.HiddenFor(m => Model.Current.Name)
    
    <button type="submit" class="primaryAction">@T("Save Profile")</button>
    
    <br />
    <br />
        
    <table id="moduleTable">
        <thead>
            <tr>
                <td>@T("Included")</td>
                <td>@T("Enabled")</td>
                <td>@T("Profile name")</td>
            </tr>
        </thead>
        <tbody>
        @for (int i = 0; i < Model.Current.Modules.Count; i++)
        {
            <tr>
                <td>@Html.CheckBoxFor(m => Model.Current.Modules[i].Included, new { id = Model.Current.Modules[i].Name.Replace('.', '_') + "_Included", value = Model.Current.Modules[i].Included, onClick = "IncludeProfile(\"" + @Model.Current.Modules[i].Name.Replace('.', '_') + "\")" })</td>
                <td>@Html.CheckBoxFor(m => Model.Current.Modules[i].Enabled, new { id = Model.Current.Modules[i].Name.Replace('.', '_') + "_Enabled", disabled = !Model.Current.Modules[i].Included })</td>
                <td>
                    @Html.DisplayTextFor(m => Model.Current.Modules[i].Name)
                    @Html.HiddenFor(m => Model.Current.Modules[i].Name)
                </td>
            </tr>
        }
        </tbody>
    </table>
    
    <br />
    
    <button type="submit" class="primaryAction">@T("Save Profile")</button>
    }

}
else
{
    <h2>@T("No profile selected")</h2>
}